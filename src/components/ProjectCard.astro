---
interface Props {
  name: string;
  description: string;
  image: string;
  url: string;
  repository: string;
  technologies: string[];
}

const { name, description, image, url, repository, technologies } = Astro.props;
---

<article
  class="flex flex-col justify-center rounded-2xl bg-light dark:bg-darkOne p-8 md:p-16 gap-y-5 shadow-lg w-full max-w-[420px] md:max-w-[520px] lg:max-w-[820px]"
>
  <img src={image} alt={`${name} Photo`} />

  <header class="text-2xl md:text-3xl font-bold text-center">{name}</header>

  <p class="text-justify dark:text-grayLight text-dark md:text-lg">
    {description}
  </p>

  <ul class="flex flex-wrap gap-2 justify-center items-center mb-5">
    {
      technologies.map((item) => {
        return (
          <li class="flex text-sm md:text-md items-center px-3 py-1 bg-whiteAlpha dark:bg-white/10 rounded-full h-8">
            {item}
          </li>
        );
      })
    }
  </ul>

  {
    (url || repository) && (
      <div
        class={
          "flex flex-row justify-stretch gap-x-4 md:gap-x-6 text-sm font-semibold md:text-lg"
        }
      >
        {url && (
          <a
            href={url}
            target="_blank"
            class="flex items-center justify-center h-10 w-full rounded-xl bg-purpleDark dark:bg-purpleLight
            text-light dark:text-dark"
          >
            Visit
          </a>
        )}
        {repository && (
          <a
            href={repository}
            target="_blank"
            class="flex items-center justify-center h-10 w-full rounded-xl bg-whiteAlpha dark:bg-white/10
            shadow-md text-dark dark:text-white gap-x-2"
          >
            <ion-icon name="logo-github" />
            <span>Source code</span>
          </a>
        )}
      </div>
    )
  }
</article>
